- hosts: localhost
  vars_files: vars.yml
  tasks:

  - name: Register the external client VM
    openstack.cloud.server_info:
      ca_cert: '{{ ca_cert_path }}'
      name: 'external'
    register: result_name_external
  
  - name: Check the existence of the external client VM
    debug:
      msg: 
        - '{{ result_name_external.servers[0].name }}'
    register: result_debug_external
    ignore_errors: true

  - name: Create the external client VM
    openstack.cloud.server:
      ca_cert: '{{ ca_cert_path }}'
      name: 'external'
      image: '{{ rocky_image_name }}'
      key_name: '{{ keypair_name }}'
      flavor: flavor-2-2-20
      network: '{{ provider_network_name }}'
      boot_from_volume: true
      volume_size: 20
      terminate_volume: true
      security_groups:
        - 'sg-icmp'
        - 'sg-ssh'
    when: result_debug_external is failed

  - name: Register the jumphost-0 VM
    openstack.cloud.server_info:
      ca_cert: '{{ ca_cert_path }}'
      name: 'jumphost-0'
    register: result_name_jumphost_0
  
  - name: Check the existence of the jumphost-0 VM
    debug:
      msg: 
        - '{{ result_name_jumphost_0.servers[0].name }}'
    register: result_debug_jumphost_0
    ignore_errors: true

  - name: Create the jumphost-0 VM
    openstack.cloud.server:
      ca_cert: '{{ ca_cert_path }}'
      name: 'jumphost-0'
      image: '{{ rocky_image_name }}'
      key_name: '{{ keypair_name }}'
      flavor: flavor-2-2-20
      nics:
        - net-name: '{{ external_network_name }}'
        - net-name: '{{ management_network_name }}'
      boot_from_volume: true
      volume_size: 20
      terminate_volume: true
      security_groups:
        - 'sg-icmp'
        - 'sg-ssh'
      auto_ip: false
    when: result_debug_jumphost_0 is failed
  
  - name: Assign floating IP to jumphost-0
    openstack.cloud.floating_ip:
      ca_cert: '{{ ca_cert_path }}'
      server: 'jumphost-0'
      network: '{{ provider_network_name }}'
      reuse: true
      nat_destination: '{{ external_network_name }}'

  - name: Register the jumphost-1 VM
    openstack.cloud.server_info:
      ca_cert: '{{ ca_cert_path }}'
      name: 'jumphost-1'
    register: result_name_jumphost_1
  
  - name: Check the existence of the jumphost-1 VM
    debug:
      msg: 
        - '{{ result_name_jumphost_1.servers[0].name }}'
    register: result_debug_jumphost_1
    ignore_errors: true

  - name: Create the jumphost-1 VM
    openstack.cloud.server:
      ca_cert: '{{ ca_cert_path }}'
      name: 'jumphost-1'
      image: '{{ rocky_image_name }}'
      key_name: '{{ keypair_name }}'
      flavor: flavor-2-2-20
      network: '{{ management_network_name }}'
      boot_from_volume: true
      volume_size: 20
      terminate_volume: true
      security_groups:
        - 'sg-icmp'
        - 'sg-ssh'
      userdata: |
        #!/bin/sh
        ip route add default via 10.255.0.10
      auto_ip: false
    when: result_debug_jumphost_1 is failed

  - name: Register the internal server VM
    openstack.cloud.server_info:
      ca_cert: '{{ ca_cert_path }}'
      name: 'internal'
    register: result_name_internal
  
  - name: Check the existence of the internal server VM
    debug:
      msg: 
        - '{{ result_name_internal.servers[0].name }}'
    register: result_debug_internal
    ignore_errors: true

  - name: Create the internal server VM
    openstack.cloud.server:
      ca_cert: '{{ ca_cert_path }}'
      name: 'internal'
      image: '{{ rocky_image_name }}'
      key_name: '{{ keypair_name }}'
      flavor: flavor-2-2-20
      nics:
        - net-name: '{{ internal_network_name }}'
        - net-name: '{{ management_network_name }}'
      boot_from_volume: true
      volume_size: 20
      terminate_volume: true
      security_groups:
        - 'sg-icmp'
        - 'sg-ssh'
        - 'sg-http'
        - 'sg-https'
      auto_ip: false
    when: result_debug_internal is failed

  - name: Register the opnsense-1 VM
    openstack.cloud.server_info:
      ca_cert: '{{ ca_cert_path }}'
      name: 'opnsense-1'
    register: result_name_opnsense_1
  
  - name: Check the existence of the opnsense-1 VM
    debug:
      msg: 
        - '{{ result_name_opnsense_1.servers[0].name }}'
    register: result_debug_opnsense_1
    ignore_errors: true

  - name: Create the opnsense-1 VM
    openstack.cloud.server:
      ca_cert: '{{ ca_cert_path }}'
      name: 'opnsense-1'
      image: '{{ opnsense_image_name }}'
      key_name: '{{ keypair_name }}'
      flavor: flavor-8-8-80
      nics:
        - port-name: '{{ opnsense_1_external_port_name }}'
        - port-name: '{{ opnsense_1_management_port_name }}'
        - port-name: '{{ opnsense_1_internal_port_name }}'
        - port-name: '{{ opnsense_1_sync_port_name }}'
      boot_from_volume: true
      volume_size: 80
      terminate_volume: true
      auto_ip: false
    when: result_debug_opnsense_1 is failed

  - name: Register the opnsense-2 VM
    openstack.cloud.server_info:
      ca_cert: '{{ ca_cert_path }}'
      name: 'opnsense-2'
    register: result_name_opnsense_2
  
  - name: Check the existence of the opnsense-2 VM
    debug:
      msg: 
        - '{{ result_name_opnsense_2.servers[0].name }}'
    register: result_debug_opnsense_2
    ignore_errors: true

  - name: Create the opnsense-2 VM
    openstack.cloud.server:
      ca_cert: '{{ ca_cert_path }}'
      name: 'opnsense-2'
      image: '{{ opnsense_image_name }}'
      key_name: '{{ keypair_name }}'
      flavor: flavor-8-8-80
      nics:
        - port-name: '{{ opnsense_2_external_port_name }}'
        - port-name: '{{ opnsense_2_management_port_name }}'
        - port-name: '{{ opnsense_2_internal_port_name }}'
        - port-name: '{{ opnsense_2_sync_port_name }}'
      boot_from_volume: true
      volume_size: 80
      terminate_volume: true
      auto_ip: false
    when: result_debug_opnsense_2 is failed