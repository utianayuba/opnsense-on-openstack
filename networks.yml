- hosts: localhost
  vars_files: vars.yml
  tasks:

  - name: Create external network
    openstack.cloud.network:
      ca_cert: '{{ ca_cert_path }}'
      name: '{{ external_network_name }}'
  
  - name: Create external subnet
    openstack.cloud.subnet:
      ca_cert: '{{ ca_cert_path }}'
      name: '{{ external_subnet_name }}'
      network_name: '{{ external_network_name }}'
      cidr: '{{ external_subnet_cidr }}'
      dns_nameservers:
        - '{{ dns_nameserver1 }}'

  - name: Create sync network
    openstack.cloud.network:
      ca_cert: '{{ ca_cert_path }}'
      name: '{{ sync_network_name }}'
  
  - name: Create sync subnet
    openstack.cloud.subnet:
      ca_cert: '{{ ca_cert_path }}'
      name: '{{ sync_subnet_name }}'
      network_name: '{{ sync_network_name }}'
      cidr: '{{ sync_subnet_cidr }}'
      dns_nameservers:
        - '{{ dns_nameserver1 }}'
      no_gateway_ip: true

  - name: Create internal network
    openstack.cloud.network:
      ca_cert: '{{ ca_cert_path }}'
      name: '{{ internal_network_name }}'
  
  - name: Create internal subnet
    openstack.cloud.subnet:
      ca_cert: '{{ ca_cert_path }}'
      name: '{{ internal_subnet_name }}'
      network_name: '{{ internal_network_name }}'
      cidr: '{{ internal_subnet_cidr }}'
      dns_nameservers:
        - '{{ dns_nameserver1 }}'
      gateway_ip: '{{ internal_gateway_ip }}'

  - name: Create management network
    openstack.cloud.network:
      ca_cert: '{{ ca_cert_path }}'
      name: '{{ mgmt_network_name }}'
  
  - name: Create management subnet
    openstack.cloud.subnet:
      ca_cert: '{{ ca_cert_path }}'
      name: '{{ mgmt_subnet_name }}'
      network_name: '{{ mgmt_network_name }}'
      cidr: '{{ mgmt_subnet_cidr }}'
      dns_nameservers:
        - '{{ dns_nameserver1 }}'
      no_gateway_ip: true
  
  - name: Create opnsense-1 external port
    openstack.cloud.port:
      ca_cert: '{{ ca_cert_path }}'
      name: '{{ opnsense_1_external_port_name }}'
      network: '{{ external_network_name }}'
      fixed_ips:
      - ip_address: '{{ opnsense_1_external_port_ip }}'
      security_groups:
      - 'sg-icmp'
      - 'sg-tcp'
      allowed_address_pairs:
      - ip_address: '{{ opnsense_external_vip_port_ip }}'

  - name: Create opnsense-2 external port
    openstack.cloud.port:
      ca_cert: '{{ ca_cert_path }}'
      name: '{{ opnsense_2_external_port_name }}'
      network: '{{ external_network_name }}'
      fixed_ips:
      - ip_address: '{{ opnsense_2_external_port_ip }}'
      security_groups:
      - 'sg-icmp'
      - 'sg-tcp'
      allowed_address_pairs:
      - ip_address: '{{ opnsense_external_vip_port_ip }}'

  - name: Create opnsense-1 sync port
    openstack.cloud.port:
      ca_cert: '{{ ca_cert_path }}'
      name: '{{ opnsense_1_sync_port_name }}'
      network: '{{ sync_network_name }}'
      fixed_ips:
      - ip_address: '{{ opnsense_1_sync_port_ip }}'
      security_groups:
      - 'sg-icmp'
      - 'sg-tcp'

  - name: Create opnsense-2 sync port
    openstack.cloud.port:
      ca_cert: '{{ ca_cert_path }}'
      name: '{{ opnsense_2_sync_port_name }}'
      network: '{{ sync_network_name }}'
      fixed_ips:
      - ip_address: '{{ opnsense_2_sync_port_ip }}'
      security_groups:
      - 'sg-icmp'
      - 'sg-tcp'

  - name: Create opnsense-1 internal port
    openstack.cloud.port:
      ca_cert: '{{ ca_cert_path }}'
      name: '{{ opnsense_1_internal_port_name }}'
      network: '{{ internal_network_name }}'
      fixed_ips:
      - ip_address: '{{ opnsense_1_internal_port_ip }}'
      security_groups:
      - 'sg-icmp'
      - 'sg-tcp'
      allowed_address_pairs:
      - ip_address: '{{ opnsense_internal_vip_port_ip }}'

  - name: Create opnsense-2 internal port
    openstack.cloud.port:
      ca_cert: '{{ ca_cert_path }}'
      name: '{{ opnsense_2_internal_port_name }}'
      network: '{{ internal_network_name }}'
      fixed_ips:
      - ip_address: '{{ opnsense_2_internal_port_ip }}'
      security_groups:
      - 'sg-icmp'
      - 'sg-tcp'
      allowed_address_pairs:
      - ip_address: '{{ opnsense_internal_vip_port_ip }}'

  - name: Create opnsense-1 management port
    openstack.cloud.port:
      ca_cert: '{{ ca_cert_path }}'
      name: '{{ opnsense_1_mgmt_port_name }}'
      network: '{{ mgmt_network_name }}'
      fixed_ips:
      - ip_address: '{{ opnsense_1_mgmt_port_ip }}'
      security_groups:
      - 'sg-icmp'
      - 'sg-tcp'

  - name: Create opnsense-2 management port
    openstack.cloud.port:
      ca_cert: '{{ ca_cert_path }}'
      name: '{{ opnsense_2_mgmt_port_name }}'
      network: '{{ mgmt_network_name }}'
      fixed_ips:
      - ip_address: '{{ opnsense_2_mgmt_port_ip }}'
      security_groups:
      - 'sg-icmp'
      - 'sg-tcp'

  - name: Create external VIP port
    openstack.cloud.port:
      ca_cert: '{{ ca_cert_path }}'
      name: '{{ opnsense_external_vip_port_name }}'
      network: '{{ external_network_name }}'
      fixed_ips:
      - ip_address: '{{ opnsense_external_vip_port_ip }}'
      security_groups:
      - 'sg-icmp'
      - 'sg-tcp'

  - name: Create internal VIP port
    openstack.cloud.port:
      ca_cert: '{{ ca_cert_path }}'
      name: '{{ opnsense_internal_vip_port_name }}'
      network: '{{ internal_network_name }}'
      fixed_ips:
      - ip_address: '{{ opnsense_internal_vip_port_ip }}'
      security_groups:
      - 'sg-icmp'
      - 'sg-tcp'
  
  - name: Create a router
    openstack.cloud.router:
      ca_cert: '{{ ca_cert_path }}'
      name: '{{ router_name }}'
      network: '{{ provider_network_name }}'
      interfaces:
        - '{{ external_subnet_name }}'

  - name: Register external VIP port floating IP
    openstack.cloud.floating_ip_info:
      ca_cert: '{{ ca_cert_path }}'
      fixed_ip_address: '{{ opnsense_external_vip_port_ip }}'
    register: result_opnsense_external_vip_fip

  - name: Check the existence of the external VIP port floating IP
    debug:
      msg: 
        - '{{ result_opnsense_external_vip_fip.floating_ips[0].fixed_ip_address }}'
    register: result_debug_opnsense_external_vip_fip
    ignore_errors: true

  - name: Assign floating IP to external VIP port
    ansible.builtin.shell: openstack floating ip create --port '{{ opnsense_external_vip_port_name }}' '{{ provider_network_name }}'
    when: result_debug_opnsense_external_vip_fip is failed